user  vagrant;
worker_processes  4;

pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {

    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    error_log  /var/log/nginx/error.log  error;

    sendfile        on;
    tcp_nopush     on;

    keepalive_timeout  65;

    gzip  on;
    server {
            listen 8080;
            #listen [::]:8080; # use this only if using IPv6
            client_max_body_size    4M;
            server_name  graphite.vagrant.com;
            access_log  /var/log/nginx/stats.access.log;
            error_log  /var/log/nginx/stats.error.log;
            add_header Access-Control-Allow-Origin *;
            add_header 'Access-Control-Allow-Methods' 'GET, POST';
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
            add_header 'Access-Control-Allow-Credentials' 'true';

           location /graphite/ {
               root   /opt/graphite/webapp;
               gzip off;
               include uwsgi_params;
               uwsgi_pass      127.0.0.1:3031;
           }
           location /events {
               root   /opt/graphite/webapp;
               gzip off;
               include uwsgi_params;
               uwsgi_pass      127.0.0.1:3031;
           }
           location /graphlot {
               root   /opt/graphite/webapp;
               gzip off;
               include uwsgi_params;
               uwsgi_pass      127.0.0.1:3031;
           }
           location /content {
               alias /opt/graphite/webapp/graphite/content;
               gzip off;
               include uwsgi_params;
               uwsgi_pass      127.0.0.1:3031;
           }
           location /metrics {
               alias /opt/graphite/webapp/graphite/metrics;
               gzip off;
               include uwsgi_params;
               uwsgi_pass      127.0.0.1:3031;
           }
           location /dashboard {
               alias /opt/graphite/webapp/graphite/dashboard;
               gzip off;
               include uwsgi_params;
               uwsgi_pass      127.0.0.1:3031;
           }
           location /render {
               alias /opt/graphite/webapp/graphite/render;
               gzip off;
               include uwsgi_params;
               uwsgi_pass      127.0.0.1:3031;
           }
           location /browser {
               alias /opt/graphite/webapp/graphite/browser;
               gzip off;
               include uwsgi_params;
               uwsgi_pass      127.0.0.1:3031;
           }
           location /composer {
               alias /opt/graphite/webapp/graphite/composer;
               gzip off;
               include uwsgi_params;
               uwsgi_pass      127.0.0.1:3031;
           }
           location /admin {
               root   /opt/graphite/webapp;
               gzip off;
               include uwsgi_params;
               uwsgi_pass      127.0.0.1:3031;
           }
           location ~ ^/media/  {
               root /usr/local/lib/python2.6/dist-packages/django/contrib/admin/media/;
               gzip_static on; # to serve pre-gzipped version
               expires max;
               add_header Cache-Control public;
           }
            

    }

    server {
            listen 8080;
            #listen [::]:8080; # use this only if using IPv6
            client_max_body_size    4M;
            server_name  grafana.vagrant.com;
            access_log  /var/log/nginx/stats.access.log;
            error_log  /var/log/nginx/stats.error.log;

           location / {
               root   /opt/grafana;
               index index.html;
               gzip off;
           }
    }
    # elasticsearch reverse proxy
    server {
        listen 5200;
        server_name elasticsearch.frontend;
        location / {
            proxy_pass                 http://127.0.0.1:9200;
            proxy_set_header           X-Real-IP   $remote_addr;
            proxy_set_header           X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_set_header           X-Forwarded-Proto  $scheme;
            proxy_set_header           X-Forwarded-Server  $host;
            proxy_set_header           X-Forwarded-Host  $host;
            proxy_set_header           Host  $host;
 
            # this is one the tricks, we should hide elasticsearch's header,
            # because it returns asterisk which isnt allowed in cors request with authorization
            proxy_hide_header 'Access-Control-Allow-Origin';
 
            add_header 'Access-Control-Allow-Origin' 'grafana.vagrant.com';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
            add_header 'Access-Control-Allow-Credentials' 'true';
        
            if ($request_method = 'OPTIONS' ) {
                # if request method is options we immediately return with 200 OK.
                return 200;
            }
        }
    }
  server {
    listen                8080 ;

    server_name           kibana.vagrant.com;
    access_log            /var/log/nginx/kibana.vagrant.com.access.log;

    location / {
      root  /opt/kibana;
      index  index.html  index.htm;
    }

    location ~ ^/_aliases$ {
      proxy_pass http://127.0.0.1:9200;
      proxy_read_timeout 90;
    }
    location ~ ^/.*/_aliases$ {
      proxy_pass http://127.0.0.1:9200;
      proxy_read_timeout 90;
    }
    location ~ ^/_nodes$ {
      proxy_pass http://127.0.0.1:9200;
      proxy_read_timeout 90;
    }
    location ~ ^/.*/_search$ {
      proxy_pass http://127.0.0.1:9200;
      proxy_read_timeout 90;
    }
    location ~ ^/.*/_mapping {
      proxy_pass http://127.0.0.1:9200;
      proxy_read_timeout 90;
    }
  }
}
